# Start from the official PHP image with Alpine
ARG DOCKER_IMAGE
FROM $DOCKER_IMAGE AS needs-squashing

LABEL maintainer="Humaid Al Mansoori"
ENV DEBIAN_FRONTEND=noninteractive

ARG PHP_VERSION
ENV PHP_VERSION=$PHP_VERSION

# Install PHP and dependencies, clean up to reduce image size
RUN curl -sS 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x14aa40ec0831756756d7f66c4f4ea0aae5267a6c' | gpg --dearmor -o /etc/apt/keyrings/ppa_ondrej_php.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/ppa_ondrej_php.gpg] https://ppa.launchpadcontent.net/ondrej/php/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ppa_ondrej_php.list && \
    apt update -y && \
    apt install -y \
    php$PHP_VERSION-fpm \
    php$PHP_VERSION-cli \
    php$PHP_VERSION-sqlite3 \
    php$PHP_VERSION-gd \
    php$PHP_VERSION-imagick \
    php$PHP_VERSION-curl \
    php$PHP_VERSION-imap \
    php$PHP_VERSION-mysql \
    php$PHP_VERSION-mbstring \
    php$PHP_VERSION-xml \
    php$PHP_VERSION-zip \
    php$PHP_VERSION-bcmath \
    php$PHP_VERSION-soap \
    php$PHP_VERSION-intl \
    php$PHP_VERSION-readline \
    php$PHP_VERSION-ldap \
    php$PHP_VERSION-msgpack \
    php$PHP_VERSION-igbinary \
    php$PHP_VERSION-redis \
    php$PHP_VERSION-swoole \
    php$PHP_VERSION-pcov \
    php$PHP_VERSION-pdo \
    php$PHP_VERSION-pdo-pgsql \
    php$PHP_VERSION-gmp && \
    apt remove -y gnupg gcc g++ autoconf make cpp && \
    apt -y autoremove && \
    apt -y purge && \
    apt clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set capabilities for PHP
RUN setcap "cap_net_bind_service=+ep" /usr/bin/php$PHP_VERSION

# Install Composer
RUN curl -sLS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer

# Setup web root
RUN mkdir -p /home/docker/www/public && echo "<?php phpinfo();" > /home/docker/www/public/index.php

# Add SSL certificates
RUN mkdir -p /etc/php/extras/ssl
COPY rootfs/php/ssl /etc/php/extras/ssl

# Copy and setup service scripts
COPY rootfs/php/sv /etc/sv
RUN find /etc/sv/*/run -type f -exec chmod 755 {} \;

# Start from a clean state
FROM scratch
COPY --from=needs-squashing / /

# Set environment variables
ENV PHP_VERSION=$PHP_VERSION \
    TZ=UTC \
    NGINX_CLIENT_MAX_BODY_SIZE=1M \
    NGINX_PUBLIC_PATH=/home/docker/www/public \
    PHP_FPM_ENABLED=true \
    PHP_MAX_INPUT_TIME=300 \
    PHP_UPLOAD_MAX_FILESIZE=1M \
    PHP_POST_MAX_SIZE=1M \
    PHP_MAX_INPUT_VARS=1000 \
    PHP_MEMORY_LIMIT=128M \
    PHP_ZLIB_OUTPUT_COMPRESSION=On \
    PHP_ALLOW_URL_FOPEN=Off \
    PHP_DISPLAY_ERRORS=Off \
    PHP_CLEAR_ENV=no \
    PHP_FILE_UPLOADS=On \
    PHP_MAX_EXECUTION_TIME=30 \
    PHP_CERT_PATH='/etc/php/extras/ssl/cacert.pem' \
    CRON_ENABLED=true \
    LARAVEL_BASE_PATH=/home/docker/www \
    QUEUE_ENABLED=false \
    QUEUE_NAMES='default:1' \
    QUEUE_ENABLE_LOG=false

# Set working directory
WORKDIR /home/docker/www

# Expose the necessary port
EXPOSE 80

# Define the entrypoint
CMD ["/usr/bin/docker-entrypoint.sh"]
